@model LULUTest.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal whiteBackground", role = "form"}))
{
    <h2 class="text-center">Регистрация</h2>
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label class="control-label col-xs-3" for="lastName">Логин:</label>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Login, new { @class = "form-control", placeholder = "Введите логин", type = "text" })
            @Html.ValidationMessageFor(m => m.Login, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-3" for="lastName">Фамилия:</label>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.SecondName, new { @class = "form-control", placeholder = "Введите фамилию", type = "text" })
            @Html.ValidationMessageFor(m => m.SecondName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-3" for="firstName">Имя:</label>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Введите имя", type = "text" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-3" for="inputEmail">Email:</label>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", type = "email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-3" for="inputPassword">Пароль:</label>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", placeholder = "Введите пароль", type = "password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-3" for="confirmPassword">Подтвердите пароль:</label>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Повторите пароль", type = "password" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-3" for="phoneNumber">Телефон:</label>
        <div class="col-xs-9">
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", placeholder = "Введите номер телефона", type = "text" })
            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-3" for="postalAddress">Адрес:</label>
        <div class="col-xs-9">
            @Html.TextAreaFor(m => m.Adress, 3, 1, new { @class = "form-control", placeholder = "Введите адрес", type = "text" })
            @Html.ValidationMessageFor(m => m.Adress, "", new { @class = "text-danger" })
            @Html.ValidationSummary("");
        </div>
    </div>
    <br />
    <div class="form-group text-center">
        <div class="col-xs-offset-3 col-xs-9">
            <input type="submit" class="btn btn-primary" value="Регистрация">
            <input type="reset" class="btn btn-default" value="Очистить форму">
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
